{"ast":null,"code":"import _defineProperty from \"/Users/christophermelby/Desktop/GoogleBookSearch/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/christophermelby/Desktop/GoogleBookSearch/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christophermelby/Desktop/GoogleBookSearch/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christophermelby/Desktop/GoogleBookSearch/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christophermelby/Desktop/GoogleBookSearch/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christophermelby/Desktop/GoogleBookSearch/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christophermelby/Desktop/GoogleBookSearch/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron/index\";\nimport { Container, Media, Button, Image, Form, FormControl } from \"react-bootstrap\";\nimport API from \"../utils/API\";\nimport \"./style.css\";\n\nvar Find =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Find, _Component);\n\n  function Find() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Find);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Find)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\",\n      authors: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.searchBooks(_this.state.title).then(function (res) {\n        return _this.setState({\n          books: res.data.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.LoadBook = function () {\n      API.searchBooks(_this.state.title).then(function (res) {\n        _this.setState({\n          books: res.data.items\n        });\n\n        console.log(res.data.items);\n      });\n    };\n\n    _this.saveButtonSubmit = function (event) {\n      event.preventDefault();\n      var infoArr = event.target.value;\n      var infoSplit = infoArr.split(\",\");\n      API.addBooks({\n        title: infoSplit[0],\n        authors: infoSplit[2],\n        description: event.target.name,\n        image: infoSplit[1],\n        link: infoSplit[3]\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Find, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.LoadBook();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Container, {\n        className: \"search-container bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Book Search\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Book\"), React.createElement(Form.Control, {\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Container, {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Results:\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(\"div\", {\n          className: \"media-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Media, {\n          key: book.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Media.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, book.volumeInfo.imageLinks ? React.createElement(Image, {\n          width: 100,\n          height: 100,\n          className: \"align-self-start mr-3\",\n          src: book.volumeInfo.imageLinks.thumbnail,\n          alt: \"Image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }) : React.createElement(Image, {\n          width: 100,\n          height: 100,\n          className: \"align-self-start mr-3\",\n          src: \"placeholder\",\n          alt: \"Image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"title: \", book.volumeInfo.title)), book.volumeInfo.authors ? React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Author: \", book.volumeInfo.authors[0])) : React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Author: Not Defined\")), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Description: \", book.volumeInfo.description)), React.createElement(Button, {\n          variant: \"danger\",\n          href: book.volumeInfo.previewLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"View\"), React.createElement(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          onClick: _this2.saveButtonSubmit,\n          name: book.volumeInfo.description,\n          value: [book.volumeInfo.title, book.volumeInfo.imageLinks.thumbnail, book.volumeInfo.authors[0], book.volumeInfo.previewLink],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Save\")));\n      }))));\n    }\n  }]);\n\n  return Find;\n}(Component);\n\nexport default Find;","map":{"version":3,"sources":["/Users/christophermelby/Desktop/GoogleBookSearch/client/src/pages/Search.js"],"names":["React","Component","Jumbotron","Container","Media","Button","Image","Form","FormControl","API","Find","state","books","title","authors","description","image","link","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","searchBooks","then","res","data","items","catch","err","console","log","LoadBook","saveButtonSubmit","infoArr","infoSplit","split","addBooks","map","book","volumeInfo","imageLinks","thumbnail","previewLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron/index\";\nimport { Container, Media, Button, Image,Form, FormControl } from \"react-bootstrap\";\nimport API from \"../utils/API\";\nimport \"./style.css\";\nclass Find extends Component {\n    state = {\n        books: [],\n        title: \"\",\n        authors: \"\",\n        description:\"\",\n        image: \"\",\n        link: \"\"\n    }\n    componentDidMount(){\n        this.LoadBook()\n    }\n    handleInputChange = event =>{\n        const {name, value } = event.target;\n        this.setState({\n            [name] : value \n        })\n    }   \n    handleFormSubmit = event =>{\n        event.preventDefault()\n        API.searchBooks(this.state.title)\n        .then(res => this.setState({books:res.data.items}))\n                  \n        .catch(err => console.log(err))\n    }\n    LoadBook = () => {\n        API.searchBooks(this.state.title)\n        .then(res => {\n        \n            this.setState({books: res.data.items})\n            console.log(res.data.items);\n        })\n    }\n    saveButtonSubmit = (event) =>{\n        event.preventDefault()\n        const infoArr = event.target.value;\n        const infoSplit  = infoArr.split(\",\")\n        API.addBooks({\n            title: infoSplit[0],\n            authors: infoSplit[2],\n            description: event.target.name,\n            image: infoSplit[1],\n            link: infoSplit[3]\n        }).then(res =>{\n            console.log(res)\n        })\n        .catch(err => console.log(err))\n    }\n    render(){\n        return (\n            <div>\n            <Jumbotron/>\n        \n            <Container className=\"search-container bg-light\">\n                <h4>Book Search</h4>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Book</Form.Label>\n                        <Form.Control  name=\"title\" value={this.state.title} onChange={this.handleInputChange} type=\"text\" placeholder=\"Search\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleFormSubmit}>\n                        Submit\n                    </Button>\n                </Form>\n            </Container>\n            <Container className=\"results\">\n            <h3 id=\"result\">Results:</h3>\n            <div>\n                {this.state.books.map(book => (\n                <div className=\"media-div\">\n                    <Media key={book.title}>\n                        <Media.Body>\n                            {book.volumeInfo.imageLinks ? (\n                                <Image\n                                width={100}\n                                height={100}\n                                className=\"align-self-start mr-3\"\n                                src={book.volumeInfo.imageLinks.thumbnail} \n                                alt=\"Image\"\n                                />\n                            ) : (\n                                <Image\n                                width={100}\n                                height={100}\n                                className=\"align-self-start mr-3\"\n                                src=\"placeholder\" \n                                alt=\"Image\"\n                                />\n                            )\n                            }\n                            <h5><strong>\n                                title: {book.volumeInfo.title}\n                            </strong></h5>\n                            \n                            {book.volumeInfo.authors? (\n                                <h6><strong>\n                                Author: {book.volumeInfo.authors[0]}\n                            </strong></h6>\n                            ):(\n                                <h6><strong>\n                                Author: Not Defined\n                            </strong></h6>\n                            )\n                            }\n                            <p>\n                                Description: {book.volumeInfo.description}\n                            </p>\n                            {/* <p src=\"{book.volumeInfo.accessInfo.webReaderLink}\">{book.volumeInfo.title}</p> */}\n                            </Media.Body>\n                        <Button variant=\"danger\" href={book.volumeInfo.previewLink}>View</Button>\n                        <Button variant=\"success\" type=\"submit\" onClick={this.saveButtonSubmit} name={book.volumeInfo.description} value={[book.volumeInfo.title,book.volumeInfo.imageLinks.thumbnail,book.volumeInfo.authors[0],book.volumeInfo.previewLink]}>Save</Button>\n                    </Media>\n                </div>\n                \n                ))} \n                </div>\n            \n            </Container>\n            </div>\n        );\n    }\n}\nexport default Find;"]},"metadata":{},"sourceType":"module"}